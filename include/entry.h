/**
 * @file entry.h
 * @author Salvador Z
 * @version 1.0
 * @brief File for entry for Exceptions handlers definitions
 *
 */

#ifndef ENTRY_H_
#define ENTRY_H_

#define S_FRAME_SIZE       256 // size of all saved registers

// Four Exception Levels (SYNC, IRQ, FIQ, ERR)
// by 4 Execution States (EL1t, EL1h, EL0_64 and EL0_32)

// EL1t: Exception is taken from EL1 while stack pointer was shared with EL0.
#define SYNC_INVALID_EL1t    0  /* Sync exception caused by currently executed instruction */
#define IRQ_INVALID_EL1t     1  /* Normal interrupts. Always asynchronous; not related to current executed instruction */
#define FIQ_INVALID_EL1t     2  /* Fast Interrupts. Purpose of prioritizing exceptions. Fast Isr will be signaled first. LINUX doesn't use them*/
#define ERR_INVALID_EL1t     3  /* Are Async. Generated by external HW. Some error condition.*/

// EL1h: Exception is taken from EL1 at the time when dedicated stack pointer was allocated for EL1.
#define SYNC_INVALID_EL1h    4  /* Sync exception caused by currently executed instruction */
#define IRQ_INVALID_EL1h     5  /* Normal interrupts. Always asynchronous; not related to current executed instruction */
#define FIQ_INVALID_EL1h     6  /* Fast Interrupts. Purpose of prioritizing exceptions. Fast Isr will be signaled first. LINUX doesn't use them*/
#define ERR_INVALID_EL1h     7  /* Are Async. Generated by external HW. Some error condition.*/

// Exception is taken from EL0 executing in 64-bit mode.
#define SYNC_INVALID_EL0_64  8  /* Sync exception caused by currently executed instruction */
#define IRQ_INVALID_EL0_64   9  /* Normal interrupts. Always asynchronous; not related to current executed instruction */
#define FIQ_INVALID_EL0_64   10  /* Fast Interrupts. Purpose of prioritizing exceptions. Fast Isr will be signaled first. LINUX doesn't use them*/
#define ERR_INVALID_EL0_64   11  /* Are Async. Generated by external HW. Some error condition.*/

// Exception is taken from EL0 executing in 32-bit mode.
#define SYNC_INVALID_EL0_32  12  /* Sync exception caused by currently executed instruction */
#define IRQ_INVALID_EL0_32   13  /* Normal interrupts. Always asynchronous; not related to current executed instruction */
#define FIQ_INVALID_EL0_32   14  /* Fast Interrupts. Purpose of prioritizing exceptions. Fast Isr will be signaled first. LINUX doesn't use them*/
#define ERR_INVALID_EL0_32   15  /* Are Async. Generated by external HW. Some error condition.*/

#endif /* ENTRY_H_ */